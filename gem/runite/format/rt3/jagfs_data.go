// Code generated by bbc; DO NOT EDIT.
package rt3

import (
	"io"

	"github.com/gemrs/gem/gem/core/encoding"
)

type FSIndex struct {
	Length     int
	StartBlock int
}

func (struc *FSIndex) Decode(buf io.Reader, flags interface{}) {
	var tmp24 encoding.Int24

	tmp24.Decode(buf, encoding.IntNilFlag)
	struc.Length = int(tmp24)

	tmp24.Decode(buf, encoding.IntNilFlag)
	struc.StartBlock = int(tmp24)
}

type FSBlock struct {
	FileID       int
	FilePosition int
	NextBlock    int
	Partition    int
	Data         []byte
}

func (struc *FSBlock) Decode(buf io.Reader, flags interface{}) {
	var tmp16 encoding.Uint16
	var tmp24 encoding.Uint24
	var tmp8 encoding.Uint8
	var tmpBytes encoding.Bytes

	tmp16.Decode(buf, encoding.IntNilFlag)
	struc.FileID = int(tmp16)

	tmp16.Decode(buf, encoding.IntNilFlag)
	struc.FilePosition = int(tmp16)

	tmp24.Decode(buf, encoding.IntNilFlag)
	struc.NextBlock = int(tmp24)

	tmp8.Decode(buf, encoding.IntNilFlag)
	struc.Partition = int(tmp8)

	tmpBytes.Decode(buf, 512)
	struc.Data = []byte(tmpBytes)
}

type FSBlockExt struct {
	*FSBlock
}

func (struc *FSBlockExt) Decode(buf io.Reader, flags interface{}) {
	var tmp32 encoding.Uint32
	var tmp16 encoding.Uint16
	var tmp24 encoding.Uint24
	var tmp8 encoding.Uint8
	var tmpBytes encoding.Bytes

	tmp32.Decode(buf, encoding.IntNilFlag)
	struc.FileID = int(tmp16)

	tmp16.Decode(buf, encoding.IntNilFlag)
	struc.FilePosition = int(tmp16)

	tmp24.Decode(buf, encoding.IntNilFlag)
	struc.NextBlock = int(tmp24)

	tmp8.Decode(buf, encoding.IntNilFlag)
	struc.Partition = int(tmp8)

	tmpBytes.Decode(buf, 512)
	struc.Data = []byte(tmpBytes)
}

type CRCFile struct {
	Archives [9]encoding.Int32
	Sum      encoding.Int32
}

func (struc *CRCFile) Encode(buf io.Writer, flags interface{}) {
	for i := 0; i < 9; i++ {
		struc.Archives[i].Encode(buf, encoding.IntNilFlag)
	}

	struc.Sum.Encode(buf, encoding.IntNilFlag)

}

func (struc *CRCFile) Decode(buf io.Reader, flags interface{}) {
	for i := 0; i < 9; i++ {
		struc.Archives[i].Decode(buf, encoding.IntNilFlag)
	}

	struc.Sum.Decode(buf, encoding.IntNilFlag)

}
