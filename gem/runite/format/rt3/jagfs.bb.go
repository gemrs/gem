// Code generated by bbc; DO NOT EDIT.
package rt3

import (
	"io"

	"github.com/gemrs/gem/gem/core/encoding"
)

type FSIndex struct {
	Length     encoding.Int24
	StartBlock encoding.Int24
}

func (struc *FSIndex) Encode(buf io.Writer, flags interface{}) {
	struc.Length.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.StartBlock.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}

func (struc *FSIndex) Decode(buf io.Reader, flags interface{}) {
	struc.Length.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.StartBlock.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}

type FSBlock struct {
	FileID       encoding.Int16
	FilePosition encoding.Int16
	NextBlock    encoding.Int24
	Partition    encoding.Int8
	Data         encoding.Bytes
}

func (struc *FSBlock) Encode(buf io.Writer, flags interface{}) {
	struc.FileID.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.FilePosition.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.NextBlock.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Partition.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Data.Encode(buf, 512)

}

func (struc *FSBlock) Decode(buf io.Reader, flags interface{}) {
	struc.FileID.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.FilePosition.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.NextBlock.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Partition.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Data.Decode(buf, 512)

}

type CRCFile struct {
	Archives [9]encoding.Int32
	Sum      encoding.Int32
}

func (struc *CRCFile) Encode(buf io.Writer, flags interface{}) {
	for i := 0; i < 9; i++ {
		struc.Archives[i].Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))
	}

	struc.Sum.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}

func (struc *CRCFile) Decode(buf io.Reader, flags interface{}) {
	for i := 0; i < 9; i++ {
		struc.Archives[i].Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))
	}

	struc.Sum.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}
