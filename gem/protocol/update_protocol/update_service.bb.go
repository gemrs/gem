// Code generated by bbc; DO NOT EDIT.
package update_protocol

import (
	"io"

	"github.com/gemrs/gem/gem/core/encoding"
)

type InboundUpdateRequest struct {
	Index    encoding.Int8
	File     encoding.Int16
	Priority encoding.Int8
}

func (struc *InboundUpdateRequest) Encode(buf io.Writer, flags interface{}) {
	struc.Index.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.File.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Priority.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}

func (struc *InboundUpdateRequest) Decode(buf io.Reader, flags interface{}) {
	struc.Index.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.File.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Priority.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

}

type OutboundUpdateResponse struct {
	Index encoding.Int8
	File  encoding.Int16
	Size  encoding.Int16
	Chunk encoding.Int8
	Data  encoding.Bytes
}

func (struc *OutboundUpdateResponse) Encode(buf io.Writer, flags interface{}) {
	struc.Index.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.File.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Size.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Chunk.Encode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Data.Encode(buf, 500)

}

func (struc *OutboundUpdateResponse) Decode(buf io.Reader, flags interface{}) {
	struc.Index.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.File.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Size.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Chunk.Decode(buf, encoding.IntegerFlag(encoding.IntNilFlag))

	struc.Data.Decode(buf, 500)

}
