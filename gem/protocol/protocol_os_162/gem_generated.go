// Code generated by gem_gen; DO NOT EDIT.
package protocol_os_162

import (
	"fmt"

	"github.com/gemrs/gem/gem/core/encoding"
	"github.com/gemrs/gem/gem/game/server"
	"github.com/gemrs/gem/gem/protocol"
)

var OutboundChatMessageDefinition = OutboundPacketDefinition{
	Number: 52,
	Size:   SzVar8,
}

var PlayerUpdateDefinition = OutboundPacketDefinition{
	Number: 40,
	Size:   SzVar16,
}

var InboundPlayerWalkMapDefinition = InboundPacketDefinition{
	Number: 6,
	Size:   SzVar8,
}

var OutboundSetUpdatingTileDefinition = OutboundPacketDefinition{
	Number: 0,
	Size:   SzFixed,
}

var OutboundSetRootInterfaceDefinition = OutboundPacketDefinition{
	Number: 2,
	Size:   SzFixed,
}

var OutboundSetInterfaceDefinition = OutboundPacketDefinition{
	Number: 29,
	Size:   SzFixed,
}

var OutboundRemoveGroundItemDefinition = OutboundPacketDefinition{
	Number: 35,
	Size:   SzFixed,
}

var OutboundUpdateAllInventoryItemsDefinition = OutboundPacketDefinition{
	Number: 62,
	Size:   SzVar16,
}

var OutboundCreateGroundItemDefinition = OutboundPacketDefinition{
	Number: 17,
	Size:   SzFixed,
}

var OutboundScriptEventDefinition = OutboundPacketDefinition{
	Number: 18,
	Size:   SzVar16,
}

var OutboundUpdateInventoryItemDefinition = OutboundPacketDefinition{
	Number: 13,
	Size:   SzVar16,
}

var OutboundRegionUpdateDefinition = OutboundPacketDefinition{
	Number: 39,
	Size:   SzVar16,
}

var OutboundSkillDefinition = OutboundPacketDefinition{
	Number: 37,
	Size:   SzFixed,
}

var InboundPlayerWalkDefinition = InboundPacketDefinition{
	Number: 65,
	Size:   SzVar8,
}

var inboundPacketBuilders = map[int]func() encoding.Decodable{

	6: func() encoding.Decodable {
		return &PacketHeader{
			Number: InboundPlayerWalkMapDefinition.Number,
			Size:   InboundPlayerWalkMapDefinition.Size,
			Object: new(InboundPlayerWalkMap),
		}
	},

	65: func() encoding.Decodable {
		return &PacketHeader{
			Number: InboundPlayerWalkDefinition.Number,
			Size:   InboundPlayerWalkDefinition.Size,
			Object: new(InboundPlayerWalk),
		}
	},
}

func (p protocolImpl) Decode(message encoding.Decodable) server.Message {
	switch message := message.(type) {

	case *InboundPlayerWalkMap:
		return (*protocol.InboundPlayerWalk)(message)

	case *InboundPlayerWalk:
		return (*protocol.InboundPlayerWalk)(message)

	case *UnknownPacket:
		return (*protocol.UnknownPacket)(message)

	case *PacketHeader:
		return p.Decode(message.Object.(encoding.Decodable))
	}
	panic(fmt.Sprintf("cannot decode %T", message))
}

func (protocolImpl) Encode(message server.Message) encoding.Encodable {
	switch message := message.(type) {

	case protocol.OutboundChatMessage:
		return OutboundChatMessageDefinition.Pack(OutboundChatMessage(message))

	case protocol.PlayerUpdate:
		return PlayerUpdateDefinition.Pack(PlayerUpdate(message))

	case protocol.OutboundSetUpdatingTile:
		return OutboundSetUpdatingTileDefinition.Pack(OutboundSetUpdatingTile(message))

	case protocol.OutboundSetRootInterface:
		return OutboundSetRootInterfaceDefinition.Pack(OutboundSetRootInterface(message))

	case protocol.OutboundSetInterface:
		return OutboundSetInterfaceDefinition.Pack(OutboundSetInterface(message))

	case protocol.OutboundRemoveGroundItem:
		return OutboundRemoveGroundItemDefinition.Pack(OutboundRemoveGroundItem(message))

	case protocol.OutboundUpdateAllInventoryItems:
		return OutboundUpdateAllInventoryItemsDefinition.Pack(OutboundUpdateAllInventoryItems(message))

	case protocol.OutboundCreateGroundItem:
		return OutboundCreateGroundItemDefinition.Pack(OutboundCreateGroundItem(message))

	case protocol.OutboundScriptEvent:
		return OutboundScriptEventDefinition.Pack(OutboundScriptEvent(message))

	case protocol.OutboundUpdateInventoryItem:
		return OutboundUpdateInventoryItemDefinition.Pack(OutboundUpdateInventoryItem(message))

	case protocol.OutboundRegionUpdate:
		return OutboundRegionUpdateDefinition.Pack(OutboundRegionUpdate(message))

	case protocol.OutboundSkill:
		return OutboundSkillDefinition.Pack(OutboundSkill(message))

	case protocol.OutboundInitInterface:
		return OutboundInitInterface(message)

	case protocol.OutboundTabInterface:
		return OutboundTabInterface(message)

	case protocol.OutboundLoginResponse:
		return OutboundLoginResponse(message)

	case protocol.OutboundSetText:
		fmt.Println("OutboundSetText not implemented")
		return nil

	case protocol.OutboundLogout:
		fmt.Println("OutboundLogout not implemented")
		return nil

	case protocol.OutboundCreateGlobalGroundItem:
		fmt.Println("OutboundCreateGlobalGroundItem not implemented")
		return nil

	case protocol.OutboundPlayerInit:
		fmt.Println("OutboundPlayerInit not implemented")
		return nil

	case protocol.OutboundResetCamera:
		fmt.Println("OutboundResetCamera not implemented")
		return nil

	case protocol.OutboundDnsLookup:
		fmt.Println("OutboundDnsLookup not implemented")
		return nil

	}
	panic(fmt.Sprintf("cannot encode %T", message))
}
